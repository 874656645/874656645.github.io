<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>WSL on Slow is Smooth and Smooth is Fast</title>
    <link>https://874656645.github.io/series/wsl/</link>
    <description>Recent content in WSL on Slow is Smooth and Smooth is Fast</description>
    <image>
      <url>https://874656645.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://874656645.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 11 Sep 2023 09:34:47 +0800</lastBuildDate><atom:link href="https://874656645.github.io/series/wsl/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>WSL Ubuntu 使用 SonarQube</title>
      <link>https://874656645.github.io/posts/263-wsl-ubuntu_%E4%BD%BF%E7%94%A8-sonarqube/</link>
      <pubDate>Mon, 11 Sep 2023 09:34:47 +0800</pubDate>
      
      <guid>https://874656645.github.io/posts/263-wsl-ubuntu_%E4%BD%BF%E7%94%A8-sonarqube/</guid>
      <description>下载 Build Wrapper：
{SonarQube URL}/static/cpp/build-wrapper-linux-x86.zip
  下载 SonarScanner：
https://docs.sonarqube.org/latest//analyzing-source-code/scanners/sonarscanner/#running-from-zip-file
  配置环境变量：
export PATH=&amp;quot;/home/rick/sonar/build-wrapper-linux-x86:/home/rick/sonar/sonar-scanner-5.0.1.3006-linux/bin:$PATH&amp;quot;
  安装 CMake
sudo apt install cmake
  安装 gcovr（计算 gtest 单元测试分支覆盖率）
sudo apt install gcovr
   注意：Ubuntu 1804 系统中通过 apt 安装的 gcovr 版本太低，不支持参数 --sonarqube，可通过 pip3 安装 5.0 版本  pip3 install pip_search pip_search gcovr pip3 install -U gcovr pip3 show gcovr 安装 gtest 库    6.1. 获取 gtest 源码</description>
    </item>
    
    <item>
      <title>WSL Ubuntu_2204 使用</title>
      <link>https://874656645.github.io/posts/262-wsl-ubuntu_2204-%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sun, 10 Sep 2023 14:55:17 +0800</pubDate>
      
      <guid>https://874656645.github.io/posts/262-wsl-ubuntu_2204-%E4%BD%BF%E7%94%A8/</guid>
      <description>WSL 中使用 Ubuntu_2204 参考：Windows 10 中的 Linux 子系统
配置开发环境   Linux 常用命令参考
  安装常用开发环境
sudo apt-get install build-essential
  安装 python 2.7  注意：Ubuntu_2204 中自带 python3，所以 python2 需要进行手动安装和配置。    查看已安装的版本
ls /usr/bin/python*
  安装 python2
sudo apt-get install python2
  设置默认版本
sudo update-alternatives --list python
sudo update-alternatives --install /usr/bin/python python /usr/bin/python2 1
sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 2
sudo update-alternatives --config python</description>
    </item>
    
    <item>
      <title>Windows 10 中的 Linux 子系统</title>
      <link>https://874656645.github.io/posts/121-windows-10-%E4%B8%AD%E7%9A%84-linux-%E5%AD%90%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Sun, 13 Feb 2022 11:01:34 +0800</pubDate>
      
      <guid>https://874656645.github.io/posts/121-windows-10-%E4%B8%AD%E7%9A%84-linux-%E5%AD%90%E7%B3%BB%E7%BB%9F/</guid>
      <description>WSL 的基本命令
一、自动安装 满足 Win10 系统版本要求的（ Windows 10 版本 2004 及更高版本（内部版本 19041 及更高版本）或 Windows 11）可以使用这种方式
查看方式，Win + R 打开运行窗口，输入 winver 查看
  安装 WSL
wsl --install
  查看可用的 Linux 发行版
wsl -l -o
  查看已安装的 Linux 分发版
wsl -l -v
  注销 Linux 发行版
wsl --unregister Ubuntu
  可以直接从官网下载 Linux 发行版的安装包，然后将 appx 扩展名改为 zip，解压到想要放置的目录，双击 ubuntu.exe 启动，参考手动安装
  二、手动安装  注意：以下命令都是在以管理员权限运行的 PowerShell 中完成   启用 “适用于 Linux 的 Windows 子系统” 可选功能</description>
    </item>
    
    <item>
      <title>Ubuntu 常用命令</title>
      <link>https://874656645.github.io/posts/117-ubuntu-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Mon, 07 Feb 2022 08:33:51 +0800</pubDate>
      
      <guid>https://874656645.github.io/posts/117-ubuntu-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid>
      <description>Linux 命令大全
一、更新和升级包 1. 更新和升级包 sudo apt update &amp;amp;&amp;amp; sudo apt upgrade
2. 安装常用开发环境 sudo apt-get install build-essential
3. 安装软件 sudo apt install tree
4. 删除不需要的包 sudo apt remove gcovr sudo apt autoremove 5. 查看已安装的软件 dpkg -l | grep gcovr
6. 查看软件安装的路径 dpkg -L openssh-server
whereis gdb
which gcovr 需要软件包的路径在环境变量 $PATH 中
7. 查看 apt 中软件的版本 apt-show-versions -a gcovr
apt show gcovr
sudo apt-cache policy libssl-dev
8. 列出已安装的软件 apt list --installed</description>
    </item>
    
  </channel>
</rss>
